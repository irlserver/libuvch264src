name: Build and Upload Debian Package

on: [push]

jobs:
  build-and-upload:
    runs-on: ubuntu-latest

    env:
      DEB_PACKAGE_NAME: libuvch264src 
      PACKAGE_VERSION: 1.0.0
      PACKAGE_ARCH: arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install ARM64 Cross-Compiler
      run: |
        sudo apt-get update
        sudo apt-get install -y g++-aarch64-linux-gnu
    - name: Add arm64 architecture and Update Sources
      run: |
        sudo dpkg --add-architecture arm64
        echo "deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports noble main restricted universe multiverse" | sudo tee /etc/apt/sources.list.d/arm64.list
        echo "deb-src [arch=arm64] http://ports.ubuntu.com/ubuntu-ports noble main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list.d/arm64.list
        echo "deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports noble-updates main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list.d/arm64.list
        echo "deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports noble-backports main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list.d/arm64.list
        echo "deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports noble-security main restricted universe multiverse" | sudo tee -a /etc/apt/sources.list.d/arm64.list
        
        sudo sed -i '/deb http:\/\/.*ubuntu\.com.*arm64/d' /etc/apt/sources.list
        sudo sed -i '/deb-src http:\/\/.*ubuntu\.com.*arm64/d' /etc/apt/sources.list
        sudo apt-get update
    - name: Install Dependencies
      run: |
        sudo dpkg --add-architecture arm64
        sudo apt-get update
        sudo apt-get install -y build-essential cmake git meson pkg-config libgstreamer1.0-dev:arm64 libgstreamer-plugins-base1.0-dev:arm64 libusb-1.0-0-dev:arm64 libusb-1.0-0:arm64

    - name: Create a arm64 cross-compilation definition file
      run: |
        echo "[binaries]" > arm64.txt
        echo "c = '/usr/bin/aarch64-linux-gnu-gcc'" >> arm64.txt
        echo "cpp = '/usr/bin/aarch64-linux-gnu-g++'" >> arm64.txt
        echo "ar = '/usr/bin/aarch64-linux-gnu-ar'" >> arm64.txt
        echo "strip = '/usr/bin/aarch64-linux-gnu-strip'" >> arm64.txt
        echo "pkgconfig = 'pkg-config'" >> arm64.txt
        echo "[properties]" >> arm64.txt
        echo "pkg_config_libdir = '/usr/lib/aarch64-linux-gnu/pkgconfig:/usr/share/pkgconfig'" >> arm64.txt
        echo "[host_machine]" >> arm64.txt
        echo "system = 'linux'" >> arm64.txt
        echo "cpu_family = 'arm64'" >> arm64.txt
        echo "cpu = 'cortex-a53'" >> arm64.txt # Adjust if needed
        echo "endian = 'little'" >> arm64.txt

    - name: Build libuvc (ARM64)
      run: |
        cd libuvc
        cmake -DCMAKE_SYSTEM_PROCESSOR=aarch64 .
        make
        sudo make install
        cd ..

    - name: Build Project (ARM64)
      run: |
        mkdir build
        PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig:/usr/share/pkgconfig meson setup build libuvch264src/ --cross-file arm64.txt
        cd build
        meson compile
        meson install
        cd ..

    - name: Create Package Directory Structure
      run: |
        mkdir -p ${{ github.workspace }}/pkg
        # Copy the plugin
        cp /usr/local/lib/aarch64-linux-gnu/gstreamer-1.0/libgstlibuvch264src.so ${{ github.workspace }}/pkg/usr/lib/aarch64-linux-gnu/gstreamer-1.0/
        # Copy libuvc library
        cp /usr/local/lib/libuvc.* ${{ github.workspace }}/pkg/usr/lib/aarch64-linux-gnu/

    - name: Build Debian Package
      uses: jiro4989/build-deb-action@v3
      with:
        package: ${{ env.DEB_PACKAGE_NAME }}
        version: ${{ env.PACKAGE_VERSION }}
        maintainer: IRL Software <mail@irl.software>
        arch: ${{ env.PACKAGE_ARCH }}
        desc: "A gstreamer plugin developed by UnlimitedIRL to support pulling H264 frames from DJI action cameras"
        depends: "libgstreamer1.0-0, libgstreamer-plugins-base1.0-0, libusb-1.0-0, libc6"
        package_root: ${{ github.workspace }}/pkg

    - name: Upload Debian Package as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.DEB_PACKAGE_NAME }}-${{ env.PACKAGE_VERSION }}-${{ env.PACKAGE_ARCH }}.deb
        path: ./${{ env.DEB_PACKAGE_NAME }}_${{ env.PACKAGE_VERSION }}_${{ env.PACKAGE_ARCH }}.deb
